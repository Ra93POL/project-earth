{% extends 'BasicCmsBundle:Default:layout.html.twig' %}
{% block mainmenu %}
    {{ render(controller('BasicCmsBundle:Default:menu')) }}
{% endblock %}
{% block title %}Браузер объектов{% endblock %}
{% block breadcrumbs %}
    <a href="{{path('basic_cms_index')}}" class="main">Главная</a>
    <span>Браузер объектов</span>
{% endblock %}
{% block content %}
<style>
    #knowledge-objects-table {
        margin-bottom: 15px;
    }
    
    #knowledge-objects-table td{
        border: 1px solid #000;
        padding: 5px;        
    }
    
    #knowledge-objects-table th{
        border: 1px solid #000;
        padding: 5px;        
    }

    #knowledge-objects-table tbody tr:hover td{
        background: #eee;
    }
    
    #knowledge-objects-table tr.active td{
        background: #ddd;        
    }
    
    #knowledge-objects-table th a{
        color: #000;
    }
    
    #knowledge-objects-table td a{
        color: #000;
    }
    
    
    
    .knowledge-cat-list a{
        display: block;
        color: #000;
        line-height: 25px;
        padding: 0 5px;
    }        
        
    .knowledge-cat-list a:hover{
        background: #eee;
    }        

    .knowledge-cat-list a.active{
        background: #ddd;
        font-weight: bold;
    }
    .knowledge-object-item a {
        display: block;
        color: #000;
        line-height: 25px;
        padding: 0 5px;
    }

    .knowledge-object-item a:hover {
        background: #eee;
    }
    .knowledge-object-item a.active{
        background: #ddd;
        font-weight: bold;
    }
    
    .knowledge-objects-paginator a {
        border: 1px solid #ccc;
        display: inline-block;
        line-height: 23px;
        min-width: 16px;
        padding: 0 3px;
        text-align: center;
        color: #000;        
    }

    .knowledge-objects-paginator a.active {
        background: #ddd;
        font-weight: bold;
    }
    
    #knowledge-object-new {
        border: 1px solid #ccc;
        display: inline-block;
        line-height: 23px;
        padding: 0 10px;
        color: #000;        
    }
    
    #knowledge-parameters-wrap td{
        padding: 5px;
    }

    #knowledge-parameters-wrap button{
        border: 1px solid #ccc;
        display: inline-block;
        line-height: 23px;
        padding: 0 10px;
        color: #000;       
        background: #fff;
    }
    #knowledge-parameters-wrap p.error {
        font-size: 12px;
        font-style: italic;
        color: #f00;
    }
    
</style>
<div id="tabsButtons">
    <a href="{{path('extended_knowledge_list')}}">Список</a>
    <a href="#" onclick="return false;" id="tab1" class="active">Таблица</a>
</div>
    <div id="tabsContent">
        <div id="con_tab1" class="active">
            <div style="width:62%;padding:0 1% 0 0;float:left;border-right:1px solid #ccc;">
                <p>Список объектов:</p>
                <table id="knowledge-objects-table">
                    <thead>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
                <div id="knowledge-objects-paginator"></div>
            </div>
            <div style="margin-left:63%;padding:0 0 0 1%;">
                <p>Параметры объекта:</p>
                <div id="knowledge-parameters-wrap">
                </div>
            </div>
            
            
            <div class="clearfix"></div>
        </div>
    </div>​
<script>
var knowledge = {
    
    paths: {{paths | raw}},
    currentSort: 0,
    currentPage: 0,
    
    loadObjects: function (sort, page) {
        $('#knowledge-objects-wrap').html('');
        this.currentSort = sort;
        this.currentPage = page;
        $.ajax({
            type: "POST",
            url: "{{path('extended_knowledge_loadobjects')}}",
            data: {sort: sort, page: page},
            error: function() {
                alert('Ошибка обращения к серверу');
            },
            success: function(data) {
                if (!data.items) {
                    return ;
                }
                var bodyHtml = '', headHtml = '', paginatorHtml = '';
                for (var i in data.items) {
                    bodyHtml += '<tr><td><a href="#" data-id="'+data.items[i].id+'">'+data.items[i].title+'</a></td><td>'+knowledge.paths[data.items[i].objectType]+'</td></tr>';
                }
                headHtml += '<tr><th>';
                if (sort == 0) {
                    headHtml += '<a href="#" data-sort="1">Название &#9650;</a>';
                } else if (sort == 1) {
                    headHtml += '<a href="#" data-sort="0">Название &#9660;</a>';
                } else {
                    headHtml += '<a href="#" data-sort="0">Название</a>';
                }
                headHtml += '</th><th>';
                if (sort == 2) {
                    headHtml += '<a href="#" data-sort="3">Путь &#9650;</a>';
                } else if (sort == 3) {
                    headHtml += '<a href="#" data-sort="2">Путь &#9660;</a>';
                } else {
                    headHtml += '<a href="#" data-sort="2">Путь</a>';
                }
                headHtml += '</th></tr>'
                paginatorHtml += '<div class="knowledge-objects-paginator">';
                for (var i = 0; i < data.pageCount; i++) {
                    paginatorHtml += '<a href="#" data-page="'+i+'" '+(i == data.page ? 'class="active"' : '')+'>'+(i + 1)+'</a>';
                }
                paginatorHtml += '</div>';
                if (data.addPermission) {
                    paginatorHtml += '<div><input type="text" id="knowledge-object-new-url" /> <a href="#" id="knowledge-object-new">Добавить объект по ссылке</a></div>';
                }
                $('#knowledge-objects-table > thead').html(headHtml);
                $('#knowledge-objects-table > tbody').html(bodyHtml);
                $('#knowledge-objects-paginator').html(paginatorHtml);
                $('#knowledge-objects-paginator input, #knowledge-objects-paginator a.button').uniform();
            }
        });	      
    },
    
    addObjectFromUrl: function (url) {
        $.ajax({
            type: "POST",
            url: "{{path('extended_knowledge_addobject')}}",
            data: {url: url},
            error: function() {
                alert('Ошибка обращения к серверу');
            },
            success: function(data) {
                if (data.error) {
                    alert(data.error);
                }
                if (data.result) {
                    alert(data.result);
                    knowledge.loadObjects(knowledge.currentSort, knowledge.currentPage);
                }
            }
        });	      
    },
    
    getObjectInfo: function (id) {
        $('#knowledge-parameters-wrap').html('');
        $.ajax({
            type: "POST",
            url: "{{path('extended_knowledge_getobject')}}",
            data: {id: id},
            error: function() {
                alert('Ошибка обращения к серверу');
            },
            success: function(data) {
                $('#knowledge-parameters-wrap').html(data);
            }
        });	      
    },
    
    editObejct: function (data) {
        $.ajax({
            type: "POST",
            url: "{{path('extended_knowledge_editobject')}}",
            data: data,
            error: function() {
                alert('Ошибка обращения к серверу');
            },
            success: function(data) {
                $('#knowledge-parameters-wrap').html(data);
            }
        });	      
    },
    
    removeObejct: function (id) {
        if (!confirm('Вы действительно хотите удалить этот объект?')) {
            return;
        }
        $.ajax({
            type: "POST",
            url: "{{path('extended_knowledge_removeobject')}}",
            data: {id: id},
            error: function() {
                alert('Ошибка обращения к серверу');
            },
            success: function(data) {
                if (data.error) {
                    alert(data.error);
                }
                if (data.result) {
                    $('#knowledge-parameters-wrap').html('');
                    alert(data.result);
                    knowledge.loadObjects(knowledge.currentSort, knowledge.currentPage);
                }
            }
        });	      
    },
    
    init: function () {
        knowledge.loadObjects(0, 0);
        $('#knowledge-objects-table').delegate('thead a', 'click', function () {
            var sort = $(this).data('sort');
            knowledge.loadObjects(sort, knowledge.currentPage);
            return false;
        });
        $('#knowledge-objects-paginator').delegate('.knowledge-objects-paginator>a', 'click', function () {
            var page = $(this).data('page');
            knowledge.loadObjects(knowledge.currentSort, page);
            return false;
        });
        $('#knowledge-objects-paginator').delegate('#knowledge-object-new', 'click', function (e) {
            var url = $('#knowledge-object-new-url').val();
            knowledge.addObjectFromUrl(url);
            return false;
        });
        $('#knowledge-objects-table').delegate('tbody tr', 'click', function () {
            $('#knowledge-objects-table tbody tr.active').removeClass('active');
            $(this).addClass('active');
            var id = $(this).find('a').data('id');
            knowledge.getObjectInfo(id);
            return false;
        });
        
        $('#knowledge-objects-table').delegate('tbody a', 'click', function () {
            $('#knowledge-objects-table tbody tr.active').removeClass('active');
            $(this).closest('tr').addClass('active');
            var id = $(this).data('id');
            knowledge.getObjectInfo(id);
            return false;
        });
        $('#knowledge-parameters-wrap').delegate('#knowledge-parameters-submit', 'click', function () {
            var data = $('#knowledge-parameters-wrap form').serialize();
            knowledge.editObejct(data);
            return false;
        });
        $('#knowledge-parameters-wrap').delegate('#knowledge-parameters-remove', 'click', function () {
            var id = $(this).data('id');
            knowledge.removeObejct(id);
            return false;
        });
    }
    
};
$(function () {
    knowledge.init();
});
</script>
{% endblock %}       



